version: '3.9'

services:
  nginx:
    image: nginx:latest
    ports:
      - 3001:80
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      client:
        condition: service_healthy
      api:
        condition: service_healthy
      api_live:
        condition: service_healthy

  client:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: client
    environment:
      DOPPLER_TOKEN: ${DOPPLER_TOKEN_CLIENT}
      API_BASE_URL: http://api:7000
    expose:
      - 3000
    depends_on:
      - api
      - api_live
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000']
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: 'api'
    environment:
      DOPPLER_TOKEN: ${DOPPLER_TOKEN_API}
    expose:
      - 7000
    ports: 
      - 7000:7000
    depends_on:
      - mongo
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:7000']
      interval: 30s
      timeout: 10s
      retries: 3

  api_live:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        DOPPLER_TOKEN: ${DOPPLER_TOKEN_API_LIVE}
    environment:
      DOPPLER_TOKEN: ${DOPPLER_TOKEN_API_LIVE}
    expose:
      - 8080
    depends_on:
      - mongo
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:4.4
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: nifty
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo_data:/data/db
    command: mongod --bind_ip_all --auth

  redis:
    image: redis:latest
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/datadocker-compose.dev.yml

volumes:
  mongo_data:
  redis_data:
