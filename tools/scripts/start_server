#!/bin/bash
# This script checks if Nginx is installed, installs it if necessary,
# starts the Nginx server with a given configuration file, and starts all applications

# Kill all running applications
echo "Killing all running applications..."
pkill -f "yarn apps:start"

# Exit the script if any command fails
set -e

wait_for_port() {
  local port=$1
  local timeout=$2

  while ! timeout $timeout bash -c "echo > /dev/tcp/localhost/$port" 2> /dev/null; do
    sleep 1
  done
}

# Check if Nginx is installed
if ! command -v nginx >/dev/null 2>&1; then
  echo "Nginx not found. Installing Nginx..."
  sudo yum install -y nginx
  echo "Nginx installed."
else
  echo "Nginx is already installed."
fi

# Start local Mongo and Redis instances using Docker Compose
echo "Starting local Mongo and Redis instances..."
docker-compose -f /home/ec2-user/app/docker-compose.prod.yml down
docker-compose -f /home/ec2-user/app/docker-compose.prod.yml up -d

# Wait for Mongo and Redis to be ready
echo "Waiting for Mongo and Redis to start listening on ports 27017 and 6379..."
wait_for_port 27017 60
wait_for_port 6379 60

# Start all applications
echo "Starting all applications..."
whoami
(cd /home/ec2-user/app/apps/client && yarn build)
yarn apps:start > app_start.log 2>&1 &

# Wait for the applications to start listening on their respective ports
echo "Waiting for applications to start listening on ports 7000, 8080, and 3000..."
wait_for_port 7000 30
wait_for_port 8080 30
wait_for_port 3000 30

nginx_conf_file="/home/ec2-user/app/conf/nginx.conf"

# Start Nginx with the specified configuration file
echo "Starting Nginx with the provided configuration file..."
sudo fuser -k 80/tcp
sudo systemctl stop nginx
sudo nginx -c $nginx_conf_file

# Check if Nginx started successfully
if [ $? -eq 0 ]; then
  echo "Nginx started successfully."
else
  echo "Failed to start Nginx."
  exit 1
fi
